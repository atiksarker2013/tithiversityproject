@model UtilityManagementSystem.Models.CustomerJobRequest

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">


    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    $(function () {
        $(".datepicker").datepicker({
            changeMonth: true,
            changeYear: true,
            enabled: true,
            yearRange: 'c-80:c+900'
        });
    });




</script>
<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Customer Job Request</h4>
    <hr />
    <h3>@ViewBag.message</h3>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.JobName, "Job Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JobName, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JobName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CustomerId, "Customer", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CustomerId", null, htmlAttributes: new { @required = "required", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ServiceAddress, "Service Address", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ServiceAddress, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ServiceAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ServiceTypeId, "ServiceType", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ServiceTypeId", null, htmlAttributes: new { @required = "required", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ServiceTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ServiceDetails, "Servie Detail", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ServiceDetails, new { htmlAttributes = new { @required = "required", @class= "form-control" } })
            @Html.ValidationMessageFor(model => model.ServiceDetails, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CustomerBudget, "Customer Budget", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CustomerBudget, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CustomerBudget, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EntryDate, "entry date", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.EntryDate, new { @required = "required", @class = "form-control datepicker", placeholder = "click here..." })
            @*@Html.EditorFor(model => model.EntryDate, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.EntryDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ScheduleDate, "Return Date", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ScheduleDate, new { htmlAttributes = new { @required = "required", @class = "form-control datepicker", placeholder="click here for date" } })
            @Html.ValidationMessageFor(model => model.ScheduleDate, "", new { @class = "text-danger" })
        </div>
    </div>




    <div class="form-group">
        @Html.LabelFor(model => model.JobStatusId, "Job Status", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("JobStatusId", null, htmlAttributes: new { @required = "required", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.JobStatusId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "CustomerJobRequest")
</div>
