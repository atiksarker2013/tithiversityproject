@model UtilityManagementSystem.Models.CustomerInvoice
@using UtilityManagementSystem.Models;
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">


    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    $(function () {
        $(".datepicker").datepicker({
            changeMonth: true,
            changeYear: true,
            enabled: true,
            yearRange: 'c-80:c+900'
        });
    });




</script>
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.InvoiceKey)
    @Html.HiddenFor(m => m.JobKey)
    <div class="form-horizontal">

        <h4>Customer Invoice</h4>
        <h5>@ViewBag.message</h5>
        <hr />

        <div class="row">
            <div class="col-md-6">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.InvoiceID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.InvoiceID, new { @class = "form-control", @required = "required", @onkeypress = "return isNumberKey(event)" })
                        @Html.ValidationMessageFor(model => model.InvoiceID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.WorkPerformed, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.WorkPerformed, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.WorkPerformed, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.InvoiceDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "form-control datepicker", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="control-label col-md-2">Item Name</div>
                    <div class="col-md-10">
                        <input type="text" name="ItemName" class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="control-label col-md-2">Rate</div>
                    <div class="col-md-10">
                        <input type="text" name="Rate" class="form-control" onkeypress="return isNumberKey(event)" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="control-label col-md-2">Quantity</div>
                    <div class="col-md-10">
                        <input type="text" name="Quantity" class="form-control" onkeypress="return isNumberKey(event)" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Add" name="add" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <table class="table table-bordered">
                <tr><th>Item Name</th><th>Rate</th><th>Quanityt</th><th></th></tr>
                @{
                    UtilityManagementDBEntities db = new UtilityManagementDBEntities();
                    var itemlist = from x in db.CustomerInvoiceDetail where x.InvoiceKey == Model.InvoiceKey select x;
                    itemlist = itemlist.OrderBy(m => m.ItemName);
                    foreach (var Item in itemlist)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(m => Item.ItemName)
                            </td>
                            <td>
                                @Html.DisplayFor(m => Item.Rate)
                            </td>
                            <td>
                                @Html.DisplayFor(m => Item.Quantity)
                            </td>
                            <td>
                                <button type="submit" name="delete" value="@Item.InvoiceDetailKey">Delete</button>
                            </td>
                        </tr>
                    }
                }
            </table>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" name="save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "InvoiceList", "CustomerInvoice", new { id = Model.JobKey }, null)
</div>
